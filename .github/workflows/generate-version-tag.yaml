name: generate-version-tag

on:
  workflow_call:
    inputs:
      stage:
        description: 'Stage [alpha, beta, rc, final, auto]'
        default: 'auto'
        required: true
        type: string
      scope:
        description: 'Scope [patch, minor, major, auto]'
        default: 'auto'
        required: true
        type: string
      gradle-cache:
        description: 'Use Gradle cache'
        default: true
        required: false
        type: boolean
    secrets:
      TOKEN_GITHUB_ACTION:
        required: true

jobs:
  generate-version-tag:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]')))

    runs-on: 'macos-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
          token: '${{ secrets.TOKEN_GITHUB_ACTION }}'

      - name: Set up Java
        uses: actions/setup-java@v2.4.0
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Build
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            build
            -Psemver.stage=${{ inputs.stage }}
            -Psemver.scope=${{ inputs.scope }}

      - name: Set version to an environment variable
        run: echo "lib_version=$(head -n 1 build/semver/version.txt)" >> $GITHUB_ENV

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2.3.1
        with:
          name: 'reports-${{ matrix.os }}'
          path: '**/build/reports/**'

      - name: Patch Changelog and regenerate README badges
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            patchChangelog
            mergeChangelog
            buildReadmeBadges
            -Psemver.stage=${{ inputs.stage }}
            -Psemver.scope=${{ inputs.scope }}

      - name: Commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git diff
          git add .
          git commit -m "Publish ${{ env.lib_version }}" -a

      - name: Generate Tag
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            createSemverTag
            -Psemver.stage=${{ inputs.stage }}
            -Psemver.scope=${{ inputs.scope }}

      - name: Push
        run: git push --follow-tags

      - name: Stop Gradle daemons
        run: ./gradlew --stop
