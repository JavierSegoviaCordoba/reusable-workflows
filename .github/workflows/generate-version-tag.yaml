name: generate-version-tag

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      stage:
        description: 'Stage [alpha, beta, rc, final, auto]'
        default: 'auto'
        required: true
        type: string
      scope:
        description: 'Scope [patch, minor, major, auto]'
        default: 'auto'
        required: true
        type: string
      restore-kotlin-native-cache:
        description: 'Restore Kotlin cache, `~/.konan` directory'
        default: true
        required: false
        type: boolean
      project-path:
        description: 'Project path to set the version GitHub output'
        default: ''
        required: false
        type: string
      semver-output-field:
        description: 'Semver output for root or nested modules'
        default: 'SEMVER'
        required: false
        type: string
      tag-prefix:
        description: 'Tag prefix to be published'
        default: ''
        required: false
        type: string
      gradle-cache:
        description: 'Use Gradle cache'
        default: true
        required: false
        type: string
      gradle-cache-cleanup:
        description: 'Enable removing unnecessary Gradle home cache'
        default: true
        required: false
        type: string
    secrets:
      SIGNING_GNUPG_KEY:
        required: false
      SIGNING_GNUPG_PASSPHRASE:
        required: false
      TOKEN_GITHUB_ACTION:
        required: true

env:
  SIGNING_GNUPG_KEY: '${{ secrets.SIGNING_GNUPG_KEY }}'
  SIGNING_GNUPG_PASSPHRASE: '${{ secrets.SIGNING_GNUPG_PASSPHRASE }}'

jobs:
  generate-version-tag:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]')))

    runs-on: 'macos-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
          token: '${{ secrets.TOKEN_GITHUB_ACTION }}'

      - name: Restore Kotlin native cache
        if: ${{ inputs.restore-kotlin-native-cache == 'true' || inputs.restore-kotlin-native-cache == true }}
        uses: actions/cache@v3.3.1
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Set up Java
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.4.2
        with:
          cache-disabled: ${{ inputs.gradle-cache == 'false' }}
          gradle-home-cache-cleanup: ${{ inputs.gradle-cache-cleanup == 'true' }}

      # TODO: Fix watchOS simulator. Remove when Kotlin 1.8.0 is released
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '13.4.1'

      - name: Set project versions as outputs
        id: semver-outputs
        run: ./gradlew ${{ inputs.project-path }}printSemver --githubOutput -Psemver.tagPrefix=${{ inputs.tag-prefix }} -Psemver.stage=${{ inputs.stage }} -Psemver.scope=${{ inputs.scope }} -Psemver.checkClean=false --no-scan

      - name: Set PUBLISH_VERSION output
        shell: kotlin -howtorun .main.kts {0}
        id: semver
        run: |
          import java.io.File

          fun File.putVariable(key: String, value: String) {
              val lines = readLines().toMutableList()
              val keyIndex = lines.indexOfFirst { line -> line.substringBefore('=') == key }
              if (keyIndex != -1) lines[keyIndex] = value else lines.add("$key=$value")
              writeText(lines.joinToString("\n"))
          }
          val outputs = """${{ toJSON(steps.semver-outputs.outputs) }}"""
          val version =
              outputs
                  .lines()
                  .first { it.contains("${{ inputs.semver-output-field }}") }
                  .substringBeforeLast('"')
                  .substringAfterLast('"')
          println(version)
          val githubOutputFile = File(System.getenv("GITHUB_OUTPUT"))
          githubOutputFile.putVariable("PUBLISH_VERSION", version)

#      - name: Build
#        run: ./gradlew build -Psemver.tagPrefix=${{ inputs.tag-prefix }} -Psemver.stage=${{ inputs.stage }} -Psemver.scope=${{ inputs.scope }}

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3.1.2
        with:
          name: 'reports-${{ matrix.os }}'
          path: '**/build/reports/**'

      - name: Patch Changelog and regenerate README badges
        run: ./gradlew patchChangelog mergeChangelog writeReadmeBadges -Psemver.tagPrefix=${{ inputs.tag-prefix }} -Psemver.stage=${{ inputs.stage }} -Psemver.scope=${{ inputs.scope }} -Psemver.checkClean=false

      - name: Commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git diff
          git add .
          git commit -m "Publish ${{ steps.semver.outputs.PUBLISH_VERSION }}" -a

      - name: Generate Tag
        run: ./gradlew createSemverTag -Psemver.tagPrefix=${{ inputs.tag-prefix }} -Psemver.stage=${{ inputs.stage }} -Psemver.scope=${{ inputs.scope }}

      - name: Push
        run: git push --follow-tags
