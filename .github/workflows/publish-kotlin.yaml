name: publish-kotlin

on:
  workflow_call:
    inputs:
      publish-maven-central:
        description: 'Publish artifacts to MavenCentral'
        default: true
        required: false
        type: boolean
      publish-gradle-plugin-portal:
        description: 'Publish Gradle plugins to Gradle Plugin Portal'
        default: false
        required: false
        type: boolean
      publish-jetbrains-marketplace:
        description: 'Publish IntelliJ IDEA plugins to JetBrains marketplace'
        default: false
        required: false
        type: boolean
      publish-docs:
        description: 'Publish docs to GitHub pages'
        default: true
        required: false
        type: boolean
      gradle-args-publish-maven-central:
        description: 'Gradle args for `Publish to MavenCentral` step'
        default: ''
        required: false
        type: string
      gradle-args-publish-gradle-plugin-portal:
        description: 'Gradle args for `Publish to Gradle Plugin Portal` step'
        default: ''
        required: false
        type: string
      gradle-args-publish-jetbrains-marketplace:
        description: 'Gradle args for `Publish to JetBrains marketplace` step'
        default: ''
        required: false
        type: string
      publish-github-release:
        description: 'Publish GitHub release'
        default: true
        required: false
        type: boolean
      gradle-cache:
        description: 'Use Gradle cache'
        default: true
        required: false
        type: boolean
    secrets:
      GITHUB_TOKEN:
        required: false
      OSS_USER:
        required: false
      OSS_TOKEN:
        required: false
      OSS_STAGING_PROFILE_ID:
        required: false
      SIGNING_KEY_NAME:
        required: false
      SIGNING_KEY_ID:
        required: false
      SIGNING_KEY_PASSPHRASE:
        required: false
      SIGNING_KEY:
        required: false
      GRADLE_PUBLISH_KEY:
        required: false
      GRADLE_PUBLISH_SECRET:
        required: false
      JETBRAINS_MARKETPLACE_CERTIFICATE_CHAIN:
        required: false
      JETBRAINS_MARKETPLACE_KEY:
        required: false
      JETBRAINS_MARKETPLACE_KEY_PASSPHRASE:
        required: false
      JETBRAINS_MARKETPLACE_TOKEN:
        required: false

jobs:
  build:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]')))

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'macos-latest', 'ubuntu-latest', 'windows-latest' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2.3.1
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Build
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: build

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: 'reports-${{ matrix.os }}'
          path: '**/build/reports/**'

      - name: Stop Gradle daemons
        run: ./gradlew --stop

  publish:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]')))

    needs: build

    runs-on: 'macos-latest'

    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      OSS_USER: '${{ secrets.OSS_USER }}'
      OSS_TOKEN: '${{ secrets.OSS_TOKEN }}'
      OSS_STAGING_PROFILE_ID: '${{ secrets.OSS_STAGING_PROFILE_ID }}'
      SIGNING_KEY_NAME: '${{ secrets.SIGNING_KEY_NAME }}'
      SIGNING_KEY_ID: '${{ secrets.SIGNING_KEY_ID }}'
      SIGNING_KEY_PASSPHRASE: '${{ secrets.SIGNING_KEY_PASSPHRASE }}'
      SIGNING_KEY: '${{ secrets.SIGNING_KEY }}'
      GRADLE_PUBLISH_KEY: '${{ secrets.GRADLE_PUBLISH_KEY }}'
      GRADLE_PUBLISH_SECRET: '${{ secrets.GRADLE_PUBLISH_SECRET }}'
      JETBRAINS_MARKETPLACE_CERTIFICATE_CHAIN: '${{ secrets.JETBRAINS_MARKETPLACE_CERTIFICATE_CHAIN }}'
      JETBRAINS_MARKETPLACE_KEY: '${{ secrets.JETBRAINS_MARKETPLACE_KEY }}'
      JETBRAINS_MARKETPLACE_KEY_PASSPHRASE: '${{ secrets.JETBRAINS_MARKETPLACE_KEY_PASSPHRASE }}'
      JETBRAINS_MARKETPLACE_TOKEN: '${{ secrets.JETBRAINS_MARKETPLACE_TOKEN }}'

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2.3.1
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Build
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: build

      - name: Generate Site docs
        if: (inputs.publish-docs == true) && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: buildDocs

      - name: Import GPG key
        if: (inputs.publish-maven-central == true)
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.SIGNING_KEY }}
          passphrase: ${{ secrets.SIGNING_KEY_PASSPHRASE }}

      - name: Publish to MavenCentral
        if: (inputs.publish-maven-central == true)
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            publishToSonatype
            closeSonatypeStagingRepository
            ${{ inputs.gradle-args-publish-maven-central }}

      - name: Publish to Gradle Plugin Portal
        if: (inputs.publish-gradle-plugin-portal == true)
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            publishPlugins
            ${{ inputs.gradle-args-publish-gradle-plugin-portal }}
            -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}
            -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}

      - name: Publish to JetBrains marketplace
        if: (inputs.publish-jetbrains-marketplace == true)
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            publishPlugin
            ${{ inputs.gradle-args-publish-jetbrains-marketplace }}

      - name: Deploy docs to Github Pages
        if: (inputs.publish-docs == true) && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: 'gh-pages'
          folder: 'build/docs/_site'
          single-commit: true
          clean: true
          clean-exclude: |
            api/versions/**

      - name: Release
        uses: anton-yurchenko/git-release@v4.1.2
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          DRAFT_RELEASE: false
          PRE_RELEASE: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          CHANGELOG_FILE: 'CHANGELOG.md'
          ALLOW_EMPTY_CHANGELOG: true

      - name: Stop Gradle daemons
        run: ./gradlew --stop
