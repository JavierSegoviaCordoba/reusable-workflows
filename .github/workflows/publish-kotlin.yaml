name: publish-kotlin

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      code-coverage-report:
        description: 'Enable code coverage report'
        default: true
        required: false
        type: boolean
      code-quality-check:
        description: 'Enable code quality'
        default: true
        required: false
        type: boolean
      publish-maven-central:
        description: 'Publish artifacts to MavenCentral'
        default: true
        required: false
        type: boolean
      publish-gradle-plugin-portal:
        description: 'Publish Gradle plugins to Gradle Plugin Portal'
        default: false
        required: false
        type: boolean
      publish-jetbrains-marketplace:
        description: 'Publish IntelliJ IDEA plugins to JetBrains marketplace'
        default: false
        required: false
        type: boolean
      publish-docs:
        description: 'Publish docs to GitHub pages'
        default: true
        required: false
        type: boolean
      gradle-args:
        description: 'Gradle args for every steps'
        default: ''
        required: false
        type: string
      gradle-args-build:
        description: 'Gradle args for `build` step'
        default: ''
        required: false
        type: string
      gradle-args-publish-maven-central:
        description: 'Gradle args for `Publish to MavenCentral` step'
        default: ''
        required: false
        type: string
      gradle-args-publish-gradle-plugin-portal:
        description: 'Gradle args for `Publish to Gradle Plugin Portal` step'
        default: ''
        required: false
        type: string
      gradle-args-publish-jetbrains-marketplace:
        description: 'Gradle args for `Publish to JetBrains marketplace` step'
        default: ''
        required: false
        type: string
      run-sonar-linux:
        description: 'Run Sonar task'
        default: false
        required: false
        type: boolean
      gradle-args-sonar:
        description: 'Gradle args for `Update Sonar` step'
        default: ''
        required: false
        type: string
      publish-github-release:
        description: 'Publish GitHub release'
        default: true
        required: false
        type: boolean
      restore-kotlin-native-cache:
        description: 'Restore Kotlin cache, `~/.konan` directory'
        default: true
        required: false
        type: boolean
      gradle-cache:
        description: 'Use Gradle cache'
        default: true
        required: false
        type: string
      gradle-cache-cleanup:
        description: 'Enable removing unnecessary Gradle home cache'
        default: true
        required: false
        type: string
      changelog-file:
        description: 'Changelog file path for empty tag prefix'
        default: 'CHANGELOG.md'
        required: false
        type: string
      changelog-file-c-tag-prefix:
        description: 'Changelog file path for c tag prefix'
        default: 'CHANGELOG.md'
        required: false
        type: string
    secrets:
      ANALYSIS_QODANA_TOKEN:
        required: false
      ANALYSIS_SONAR_TOKEN:
        required: false
      NEXUS_STAGING_PROFILE_ID:
        required: false
      NEXUS_TOKEN:
        required: false
      NEXUS_USER:
        required: false
      SIGNING_GNUPG_KEY:
        required: false
      SIGNING_GNUPG_PASSPHRASE:
        required: false
      GRADLE_PUBLISH_KEY:
        required: false
      GRADLE_PUBLISH_SECRET:
        required: false
      JETBRAINS_MARKETPLACE_CERTIFICATE_CHAIN:
        required: false
      JETBRAINS_MARKETPLACE_KEY:
        required: false
      JETBRAINS_MARKETPLACE_KEY_PASSPHRASE:
        required: false
      JETBRAINS_MARKETPLACE_TOKEN:
        required: false

env:
  ANALYSIS_SONAR_TOKEN: ${{ secrets.ANALYSIS_SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  QODANA_TOKEN: ${{ secrets.ANALYSIS_QODANA_TOKEN }}
  SIGNING_GNUPG_KEY: '${{ secrets.SIGNING_GNUPG_KEY }}'
  SIGNING_GNUPG_PASSPHRASE: '${{ secrets.SIGNING_GNUPG_PASSPHRASE }}'

jobs:
  tag-prefix:
    runs-on: 'ubuntu-latest'

    outputs:
      tag-prefix: ${{ steps.tag-prefix.outputs.tag-prefix }}

    steps:
      - name: Calculate tag prefix output
        id: tag-prefix
        run: |
          echo "github.ref_name: ${{ github.ref_name }}"
          version="${{ github.ref_name }}"
          if [[ $version =~ ^([a-zA-Z]*)[0-9]?.* ]]; then
            prefix="${BASH_REMATCH[1]}"
            echo "tag-prefix=$prefix" >> "$GITHUB_OUTPUT"
          else
            echo "Invalid version format"
            exit 1
          fi
          echo "Prefix: $prefix"

  build:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]')))

    needs: tag-prefix

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'macos-latest', 'ubuntu-latest', 'windows-latest' ]

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Restore Kotlin native cache
        if: ${{ inputs.restore-kotlin-native-cache == 'true' || inputs.restore-kotlin-native-cache == true }}
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Set up Java
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@87a9a15658c426a54dd469d4fc7dc1a73ca9d4a6 # v2.10.0
        with:
          cache-disabled: ${{ inputs.gradle-cache == 'false' }}
          gradle-home-cache-cleanup: ${{ inputs.gradle-cache-cleanup == 'true' }}

      # TODO: Fix watchOS simulator. Remove when Kotlin 1.8.0 is released
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd # v1
        if: matrix.os == 'macos-latest'
        with:
          xcode-version: '13.4.1'

      - name: Setup Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
        if: matrix.os == 'macos-latest'
        with:
          python-version: '3.10'

      - name: Build
        run: ./gradlew build -P semver.tagPrefix=${{ needs.tag-prefix.outputs.tag-prefix }} ${{ inputs.gradle-args }}

      - name: Upload reports
        if: ${{ failure() }}
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: 'reports-${{ matrix.os }}'
          path: 'build/reports'

      - name: Update Sonar
        if: (matrix.os == 'ubuntu-latest') && (inputs.run-sonar-linux == 'true' || inputs.run-sonar-linux == true)
        run: ./gradlew sonar -P semver.tagPrefix=${{ needs.tag-prefix.outputs.tag-prefix }} ${{ inputs.gradle-args-sonar }} ${{ inputs.gradle-args }}

  code-quality-check:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]'))) && (inputs.code-quality-check == true)

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Restore Kotlin native cache
        if: ${{ inputs.restore-kotlin-native-cache == 'true' || inputs.restore-kotlin-native-cache == true }}
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Set up Java
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Code quality with Qodana Cloud
        if: ${{ startsWith(env.QODANA_TOKEN, 'ey') }}
        uses: JetBrains/qodana-action@95ecb19ba27e308153723e54a790e4ad908b13a0 # v2023.2.8
        with:
          cache-default-branch-only: true
          upload-result: false

      - name: Code quality
        if: ${{ !startsWith(env.QODANA_TOKEN, 'ey') }}
        uses: JetBrains/qodana-action@95ecb19ba27e308153723e54a790e4ad908b13a0 # v2023.2.8
        with:
          cache-default-branch-only: true
          upload-result: false

  publish:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]')))

    needs: [ tag-prefix, build ]

    runs-on: 'macos-latest'

    env:
      GRADLE_PUBLISH_KEY: '${{ secrets.GRADLE_PUBLISH_KEY }}'
      GRADLE_PUBLISH_SECRET: '${{ secrets.GRADLE_PUBLISH_SECRET }}'
      JETBRAINS_MARKETPLACE_CERTIFICATE_CHAIN: '${{ secrets.JETBRAINS_MARKETPLACE_CERTIFICATE_CHAIN }}'
      JETBRAINS_MARKETPLACE_KEY: '${{ secrets.JETBRAINS_MARKETPLACE_KEY }}'
      JETBRAINS_MARKETPLACE_KEY_PASSPHRASE: '${{ secrets.JETBRAINS_MARKETPLACE_KEY_PASSPHRASE }}'
      INTELLIJ_TOKEN: '${{ secrets.INTELLIJ_TOKEN }}'
      NEXUS_USER: '${{ secrets.NEXUS_USER }}'
      NEXUS_TOKEN: '${{ secrets.NEXUS_TOKEN }}'
      NEXUS_STAGING_PROFILE_ID: '${{ secrets.NEXUS_STAGING_PROFILE_ID }}'

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Restore Kotlin native cache
        if: ${{ inputs.restore-kotlin-native-cache == 'true' || inputs.restore-kotlin-native-cache == true }}
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Set up Java
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@87a9a15658c426a54dd469d4fc7dc1a73ca9d4a6 # v2.10.0
        with:
          cache-disabled: ${{ inputs.gradle-cache == 'false' }}
          gradle-home-cache-cleanup: ${{ inputs.gradle-cache-cleanup == 'true' }}

      # TODO: Fix watchOS simulator. Remove when Kotlin 1.8.0 is released
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd # v1
        with:
          xcode-version: '13.4.1'

      - name: Publish to MavenCentral
        if: (inputs.publish-maven-central == true)
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -P semver.tagPrefix=${{ needs.tag-prefix.outputs.tag-prefix }} ${{ inputs.gradle-args-publish-maven-central }} ${{ inputs.gradle-args }}

      - name: Publish to Gradle Plugin Portal
        if: (inputs.publish-gradle-plugin-portal == true)
        run: ./gradlew publishPlugins --no-parallel -Psemver.tagPrefix=${{ needs.tag-prefix.outputs.tag-prefix }} ${{ inputs.gradle-args-publish-gradle-plugin-portal }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} ${{ inputs.gradle-args }}

      - name: Publish to JetBrains marketplace
        if: (inputs.publish-jetbrains-marketplace == true)
        run: ./gradlew publishPlugin -P semver.tagPrefix=${{ needs.tag-prefix.outputs.tag-prefix }} ${{ inputs.gradle-args-publish-jetbrains-marketplace }} ${{ inputs.gradle-args }}

  deploy-docs:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]'))) && (inputs.publish-docs == true) && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') && (needs.tag-prefix.outputs.tag-prefix == '')

    needs: [ code-quality-check, tag-prefix, publish ]

    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Restore Kotlin native cache
        if: ${{ inputs.restore-kotlin-native-cache == 'true' || inputs.restore-kotlin-native-cache == true }}
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Set up Java
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@87a9a15658c426a54dd469d4fc7dc1a73ca9d4a6 # v2.10.0
        with:
          cache-disabled: ${{ inputs.gradle-cache == 'false' }}
          gradle-home-cache-cleanup: ${{ inputs.gradle-cache-cleanup == 'true' }}

      - name: Generate Site docs
        run: ./gradlew buildSite -P semver.tagPrefix=${{ needs.tag-prefix.outputs.tag-prefix }} ${{ inputs.gradle-args }} --no-scan

      - name: Deploy docs to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@65b5dfd4f5bcd3a7403bbc2959c144256167464e # v4.5.0
        with:
          branch: 'gh-pages'
          folder: 'build/docs/_site'
          single-commit: true
          clean: true
          clean-exclude: |
            api/snapshot/**
            api/versions/**
            reports-generated/**

  github-release:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]'))) && (inputs.publish-github-release == true) && (needs.tag-prefix.outputs.tag-prefix == '')

    needs: [ tag-prefix, publish ]

    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Publish GitHub Release
        uses: anton-yurchenko/git-release@719adb5848240b361a0a4b400568722fb9ba8536 # v5.0.2
        env:
          ALLOW_EMPTY_CHANGELOG: true
          CHANGELOG_FILE: '${{ inputs.changelog-file }}'
          DRAFT_RELEASE: false
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          PRE_RELEASE: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

  github-release-catalog:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]'))) && (inputs.publish-github-release == true) && (needs.tag-prefix.outputs.tag-prefix == 'c')

    needs: [ tag-prefix, publish ]

    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Publish GitHub Release
        uses: anton-yurchenko/git-release@719adb5848240b361a0a4b400568722fb9ba8536 # v5.0.2
        env:
          ALLOW_EMPTY_CHANGELOG: true
          CHANGELOG_FILE: '${{ inputs.changelog-file-c-tag-prefix }}'
          DRAFT_RELEASE: false
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          PRE_RELEASE: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          TAG_PREFIX_REGEX: '[c]?'
