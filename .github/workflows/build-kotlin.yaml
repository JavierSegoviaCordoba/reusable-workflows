name: build-kotlin

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      allow-github-actor-bots:
        description: 'Jobs are executed if the GitHub Actor contains `[bot]` (for examples: `dependabot[bot]` and `renovate[`bot`])'
        default: true
        required: false
        type: boolean
      restore-kotlin-native-cache:
        description: 'Restore Kotlin cache, `~/.konan` directory'
        default: true
        required: false
        type: boolean
      gradle-cache:
        description: 'Use Gradle cache'
        default: true
        required: false
        type: string
      gradle-cache-cleanup:
        description: 'Enable removing unnecessary Gradle home cache'
        default: true
        required: false
        type: string
      gradle-args:
        description: 'Gradle args for every steps'
        default: ''
        required: false
        type: string
      assemble:
        description: 'Enable running assemble'
        default: false
        required: false
        type: boolean
      run_before_args:
        description: 'Gradle args for `Run before` step'
        default: ''
        required: false
        type: string
      build:
        description: 'Enable running build'
        default: true
        required: false
        type: boolean
      gradle-args-build:
        description: 'Gradle args for `Build` step'
        default: ''
        required: false
        type: string
      code-quality-check:
        description: 'Enable code quality'
        default: true
        required: false
        type: boolean
      gradle-args-build-docs:
        description: 'Gradle args for `Generate docs` step'
        default: ''
        required: false
        type: string
      gradle-args-publish-snapshot:
        description: 'Gradle args for `Publish snapshot` step'
        default: ''
        required: false
        type: string
      publish-snapshot:
        description: 'Publish artifacts to Sonatype snapshots repository'
        default: true
        required: false
        type: boolean
      run-sonar-linux:
        description: 'Run Sonar task'
        default: false
        required: false
        type: boolean
      gradle-args-sonar:
        description: 'Gradle args for `Update Sonar` step'
        default: ''
        required: false
        type: string
      deploy-docs:
        description: 'Deploy docs to GitHub pages'
        default: true
        required: false
        type: string
      publish-all-docs:
        description: 'Publish all docs to GitHub pages'
        default: false
        required: false
        type: string
      publish-snapshot-tag-prefix:
        description: 'Publish snapshot based on a custom tag prefix'
        default: 'null'
        required: false
        type: string
    secrets:
      ANALYSIS_QODANA_TOKEN:
        required: false
      ANALYSIS_SONAR_TOKEN:
        required: false
      NEXUS_STAGING_PROFILE_ID:
        required: false
      NEXUS_TOKEN:
        required: false
      NEXUS_USER:
        required: false

env:
  ANALYSIS_SONAR_TOKEN: ${{ secrets.ANALYSIS_SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  QODANA_TOKEN: ${{ secrets.ANALYSIS_QODANA_TOKEN }}

jobs:
  build:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]'))) && (inputs.build)

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-14' ]

    steps:
      - name: Checkout
        uses: JavierSegoviaCordoba/reusable-workflows/actions/checkout@main

      - name: Validate Gradle wrapper
        uses: JavierSegoviaCordoba/reusable-workflows/actions/gradle-wrapper-validation@main

      - name: Kotlin native cache
        if: inputs.restore-kotlin-native-cache == true
        uses: JavierSegoviaCordoba/reusable-workflows/actions/kotlin-native-cache@main

      - name: Set up Java
        uses: JavierSegoviaCordoba/reusable-workflows/actions/setup-java@main

      - name: Set up Gradle
        uses: JavierSegoviaCordoba/reusable-workflows/actions/setup-gradle@main
        with:
          cache-enabled: ${{ inputs.gradle-cache }}
          gradle-home-cache-cleanup: ${{ inputs.gradle-cache-cleanup }}

      - name: Set up Xcode
        # TODO: Fix watchOS simulator. Disable if not necessary.
        # if: 'false'
        uses: JavierSegoviaCordoba/reusable-workflows/actions/setup-xcode@main

      - name: Set up Python
        if: startsWith(matrix.os, 'macos-14')
        uses: JavierSegoviaCordoba/reusable-workflows/actions/setup-python@main

      - name: Run before
        run: ${{ inputs.run_before_args }}

      - name: Build
        run: ./gradlew build ${{ inputs.gradle-args-build }} ${{ inputs.gradle-args }}

      - name: Upload test reports
        if: ${{ failure() }}
        continue-on-error: true
        uses: JavierSegoviaCordoba/reusable-workflows/actions/upload-artifact@main
        with:
          name: 'test-reports-${{ matrix.os }}'
          path: '**/build/reports/tests'

      - name: Update Sonar
        if: (matrix.os == 'ubuntu-latest') && (inputs.run-sonar-linux == 'true' || inputs.run-sonar-linux == true)
        run: ./gradlew sonar ${{ inputs.gradle-args-sonar }} ${{ inputs.gradle-args }}

  code-quality-check:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]'))) && (inputs.code-quality-check == true)

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: JavierSegoviaCordoba/reusable-workflows/actions/checkout@main

      - name: Kotlin native cache
        if: inputs.restore-kotlin-native-cache == true
        uses: JavierSegoviaCordoba/reusable-workflows/actions/kotlin-native-cache@main

      - name: Update Qodana
        uses: JavierSegoviaCordoba/reusable-workflows/actions/qodana@main

  publish-snapshot:
    if: |
      !cancelled() && !failure() &&
      (((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]'))) && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch')) && (inputs.publish-snapshot == true))

    needs: [ build ]

    runs-on: 'macos-14'

    env:
      NEXUS_USER: '${{ secrets.NEXUS_USER }}'
      NEXUS_TOKEN: '${{ secrets.NEXUS_TOKEN }}'
      NEXUS_STAGING_PROFILE_ID: '${{ secrets.NEXUS_STAGING_PROFILE_ID }}'

    steps:
      - name: Checkout
        uses: JavierSegoviaCordoba/reusable-workflows/actions/checkout@main

      - name: Kotlin native cache
        if: inputs.restore-kotlin-native-cache == true
        uses: JavierSegoviaCordoba/reusable-workflows/actions/kotlin-native-cache@main

      - name: Set up Java
        uses: JavierSegoviaCordoba/reusable-workflows/actions/setup-java@main

      - name: Set up Gradle
        uses: JavierSegoviaCordoba/reusable-workflows/actions/setup-gradle@main
        with:
          cache-enabled: ${{ inputs.gradle-cache }}
          gradle-home-cache-cleanup: ${{ inputs.gradle-cache-cleanup }}

      - name: Set up Xcode
        # TODO: Fix watchOS simulator. Disable if not necessary.
        # if: 'false'
        uses: JavierSegoviaCordoba/reusable-workflows/actions/setup-xcode@main

      - name: Publish snapshot
        run: ./gradlew publishToSonatype ${{ inputs.gradle-args-publish-snapshot }} ${{ inputs.gradle-args }} -P semver.stage=snapshot

      - name: Publish snapshot with custom tag prefix
        if: ${{ inputs.publish-snapshot-tag-prefix != 'null' }}
        run: ./gradlew publishToSonatype ${{ inputs.gradle-args-publish-snapshot }} ${{ inputs.gradle-args }} -P semver.stage=snapshot -P semver.tagPrefix=${{ inputs.publish-snapshot-tag-prefix }}

  deploy-docs:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]'))) && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch')) && (inputs.deploy-docs == true || inputs.deploy-docs == 'true')

    needs: [ code-quality-check, publish-snapshot ]

    runs-on: 'ubuntu-latest'

    env:
      NEXUS_USER: '${{ secrets.NEXUS_USER }}'
      NEXUS_TOKEN: '${{ secrets.NEXUS_TOKEN }}'
      NEXUS_STAGING_PROFILE_ID: '${{ secrets.NEXUS_STAGING_PROFILE_ID }}'

    steps:
      - name: Checkout
        uses: JavierSegoviaCordoba/reusable-workflows/actions/checkout@main

      - name: Kotlin native cache
        if: inputs.restore-kotlin-native-cache == true
        uses: JavierSegoviaCordoba/reusable-workflows/actions/kotlin-native-cache@main

      - name: Set up Java
        uses: JavierSegoviaCordoba/reusable-workflows/actions/setup-java@main

      - name: Set up Gradle
        uses: JavierSegoviaCordoba/reusable-workflows/actions/setup-gradle@main
        with:
          cache-enabled: ${{ inputs.gradle-cache }}
          gradle-home-cache-cleanup: ${{ inputs.gradle-cache-cleanup }}

      - name: Set semver as output
        id: semver
        run: ./gradlew printSemver --githubOnlyRoot --githubOutput -P semver.stage=snapshot --no-scan

      - name: Generate docs
        run: ./gradlew buildSite ${{ inputs.gradle-args-build-docs }} ${{ inputs.gradle-args }} -P semver.stage=snapshot --no-scan

      - name: Deploy all docs to GitHub Pages
        if: (inputs.publish-all-docs == 'true')
        uses: JavierSegoviaCordoba/reusable-workflows/actions/github-pages-deploy@main
        with:
          folder: 'build/docs/_site'
          commit-message: 'Deploy ${{ steps.semver.outputs.SEMVER }} all docs'
          clean-exclude: |
            api/versions/**
            reports-generated/**

      - name: Deploy only API docs and reports to GitHub Pages
        if: (inputs.publish-all-docs == 'false')
        uses: JavierSegoviaCordoba/reusable-workflows/actions/github-pages-deploy@main
        with:
          folder: 'build/docs/_site/api/snapshot/'
          target-folder: 'api/snapshot/'
          commit-message: 'Deploy ${{ steps.semver.outputs.SEMVER }} API docs and reports'
          clean-exclude: |
            !api/snapshot/**
