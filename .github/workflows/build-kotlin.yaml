name: build-kotlin

on:
  workflow_call:
    inputs:
      gradle-args:
        description: 'Gradle args for `build` step'
        default: ''
        required: false
        type: string
      gradle-args-publish-snapshot:
        description: 'Gradle args for `Publish snapshot` step'
        default: ''
        required: false
        type: string
      allow-github-actor-bots:
        description: 'Jobs are executed if the GitHub Actor contains `[bot]` (for examples: `dependabot[bot]` and `renovate[`bot`])'
        default: true
        required: false
        type: boolean
      publish-snapshot:
        description: 'Publish artifacts to Sonatype snapshots repository'
        default: true
        required: false
        type: boolean
      publish-docs:
        description: 'Publish docs to GitHub pages'
        default: true
        required: false
        type: boolean
      gradle-cache:
        description: 'Use Gradle cache'
        default: true
        required: false
        type: boolean
    secrets:
      OSS_USER:
        required: false
      OSS_TOKEN:
        required: false
      OSS_STAGING_PROFILE_ID:
        required: false

jobs:
  build:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]')))

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'macos-latest', 'ubuntu-latest', 'windows-latest' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2.3.1
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Build
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            build
            ${{ inputs.gradle-args }}
            -Psemver.stage=snapshot

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: 'reports-${{ matrix.os }}'
          path: '**/build/reports/**'

      - name: Generate code analysis reports
        if: ${{ always() }}
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            detekt
            -Psemver.stage=snapshot

      - name: Upload code analysis reports
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'build/reports/detekt/detekt.sarif'

      - name: Stop Gradle daemons
        run: ./gradlew --stop

  publish-snapshot:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]'))) && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch'))

    needs: build

    runs-on: 'ubuntu-latest'

    env:
      OSS_USER: '${{ secrets.OSS_USER }}'
      OSS_TOKEN: '${{ secrets.OSS_TOKEN }}'
      OSS_STAGING_PROFILE_ID: '${{ secrets.OSS_STAGING_PROFILE_ID }}'

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2.3.1
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Generate docs
        if: (inputs.publish-docs == true)
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            buildDocs
            -Psemver.stage=snapshot

      - name: Generate snapshot
        if: (inputs.publish-snapshot == true)
        uses: gradle/gradle-build-action@v2.0.1
        with:
          cache-disabled: '${{ !inputs.gradle-cache }}'
          arguments: |
            publishToSonatype
            ${{ inputs.gradle-args-publish-snapshot }}
            -Psemver.stage=snapshot

      - name: Deploy docs to Github Pages
        if: (inputs.publish-docs == true)
        uses: JamesIves/github-pages-deploy-action@4.1.6
        with:
          branch: 'gh-pages'
          folder: 'build/docs/_site'
          single-commit: true
          clean: true
          clean-exclude: |
            api/versions/**

      - name: Stop Gradle daemons
        run: ./gradlew --stop
