name: build-kotlin

on:
  workflow_call:
    inputs:
      machines:
        description: 'Virtual environments. Set all machines separated by comma, for example: `ubuntu-latest, windows-latest`. The first one will be used for one global time steps.'
        default: 'ubuntu-latest'
        required: true
        type: string
      gradle-args:
        description: 'Gradle args for `build` step'
        default: ''
        required: false
        type: string
      allow-github-actor-bots:
        description: 'Jobs are not executed if the GitHub Actor contains `[bot]` (for examples: `dependabot[bot]` and `renovate[`bot`])'
        default: true
        required: false
        type: boolean
    secrets:
      OSS_USER:
        required: true
      OSS_TOKEN:
        required: true
      OSS_STAGING_PROFILE_ID:
        required: true

jobs:
  setup-matrix:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]')))
    runs-on: 'ubuntu-latest'

    outputs:
      matrix: ${{ steps.setup-matrix.outputs.matrix }}

    steps:
      - name: Setup matrix
        id: setup-matrix
        run: |
          MACHINES=$(echo "\"${{ inputs.machines }}\"" | tr -d '[:space:]' | sed 's/,/", "/g')
          echo $MACHINES
          echo "::set-output name=matrix::{\"os\": [$MACHINES]}"

  build:
    if: ((inputs.allow-github-actor-bots == true) || (!contains(github.actor, '[bot]')))

    needs: setup-matrix

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup-matrix.outputs.matrix)}}

    runs-on: '${{ matrix.os }}'

    env:
      OSS_USER: '${{ secrets.OSS_USER }}'
      OSS_TOKEN: '${{ secrets.OSS_TOKEN }}'
      OSS_STAGING_PROFILE_ID: '${{ secrets.OSS_STAGING_PROFILE_ID }}'

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2.3.1
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Gradle cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle.properties', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Increment version
        run: ./gradlew reckonTagCreate -P"reckon.stage"="final"

      - name: Gradle build
        run: ./gradlew build ${{ inputs.gradle-args }} -P"reckon.stage"="snapshot" -P"reckon.scope"="patch"

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: 'reports-${{ matrix.os }}'
          path: '**/build/reports/**'

      - name: Generate code analysis reports
        if: ${{ always() }}
        run: ./gradlew detekt -P"reckon.stage"="snapshot" -P"reckon.scope"="patch"

      - name: Upload code analysis reports
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'build/reports/detekt/detekt.sarif'

      - name: Generate docs
        if: ${{ (matrix.os == fromJson(needs.setup-matrix.outputs.matrix).os[0]) && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch')) }}
        run: ./gradlew buildDocs -P"reckon.stage"="snapshot" -P"reckon.scope"="patch"

      - name: Publish snapshot
        if: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') }}
        run: ./gradlew publishToSonatype -P"reckon.stage"="snapshot" -P"reckon.scope"="patch"

      - name: Deploy docs to Github Pages
        if: ${{ (matrix.os == fromJson(needs.setup-matrix.outputs.matrix).os[0]) && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch')) }}
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: 'gh-pages'
          folder: 'build/docs/_site'
          single-commit: true
          clean: true
          clean-exclude: |
            api/versions/**

      - name: Stop Gradle daemons
        run: ./gradlew --stop
